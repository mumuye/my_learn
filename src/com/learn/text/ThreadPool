线程池讲解：
    说线程池首先说一下为什么要有线程池，因为java线程是和计算机的内核线程是1：1对应的。而且创建线程是一个繁琐的过程，
    线程的管理也需要耗费大量的cpu资源，因此能够复用线程的话，能节省不少开销。了解线程池的话，如果能了解他的扩容机制的话，基本上就能理解
    线程池了，下面我说一下线程池的扩容过程吧。
    线程池的核心参数有 核心线程，最大线程，空闲存活时间，时间单位，线程工厂，阻塞队列，策略模式。
    扩容过程如下
     1.当线程的核心线程没有达到最大值的时候，就算有空闲线程，也创建新的线程去执行该次任务。
     2.当线程的核心线程满了，那么优先吧任务放在阻塞队列中去
     3.当阻塞对列也满了，还没有到达最大线程数，那么创建新的线程去执行该任务
     4.如果队列满了，最大线程满了，那么就执行配置的策略。策略有四种，报错；丢弃第一条，放在队尾；丢弃该任务；调用线程执行该次任务。也可以自定义实现策略。
   线程池的状态有5种：   记录状态的值是一个atomicInteger 的 ctl 字段
               状态                 高三位值
            running                    111
            shutdown ,                  000
            stop ,                       001
            tidying,                    010
            terminated                   011


   线程池的addWork流程：



有哪些让AB线程交替执行的办法











